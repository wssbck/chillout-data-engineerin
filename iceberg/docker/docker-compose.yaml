services:

  jupyter:
    build: ./jupyter/
    container_name: cde_jupyter
    command: ["jupyter", "notebook", "--allow-root", "--ip", "0.0.0.0", "--no-browser", "--NotebookApp.token=''", "--NotebookApp.password=''"]
    environment:
      - PYICEBERG_HOME=/_notebooks
    ports:
      - "8888:8888"
    volumes:
      - type: bind
        source: ../_data
        target: /opt/data
      - type: bind
        source: ../_notebooks
        target: /_notebooks

  minio:
    build: ./minio/
    container_name: cde_minio
    command: ["minio", "server", "/opt/data", "--console-address", ":9001"]
    environment:
      - MINIO_DOMAIN=minio
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_REGION_NAME=eu-central-1
      - MINIO_REGION=eu-central-1
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - type: bind
        source: ../_data
        target: /opt/data

  lakekeeper:
    build: ./lakekeeper/
    container_name: cde_lakekeeper
    environment:
      - LAKEKEEPER__PG_ENCRYPTION_KEY=postgresql_key
      - LAKEKEEPER__PG_DATABASE_URL_READ=postgresql://postgres:postgres@postgres:5432/postgres
      - LAKEKEEPER__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@postgres:5432/postgres
      - RUST_LOG=trace,axum=trace,sqlx=trace,lakekeeper=trace
    command: [ "serve" ]
    healthcheck:
      test: [ "CMD", "/home/nonroot/lakekeeper", "healthcheck" ]
      interval: 1s
      timeout: 10s
      retries: 3
      start_period: 3s
    depends_on:
      - postgres
      - minio
    ports:
      - "8181:8181"
  
  postgres:
    build: ./postgresql/
    container_name: cde_postgres
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres

  trino:
    build: ./trino/
    container_name: cde_trino
    ports:
      - "8080:8080"
    volumes:
      - type: bind
        source: ../_data
        target:  /opt/data/
      - type: bind
        source: ./trino/config
        target: /etc/trino/
